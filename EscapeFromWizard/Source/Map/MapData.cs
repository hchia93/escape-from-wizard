using System.Collections.Generic;
using Microsoft.Xna.Framework;

namespace EscapeFromWizard.Map
{
    public class MapData
    {
        public int[] levelData;

        public int GetMapTileWidth()
        {
            return 25;
        }

        public int GetMapTileHeight()
        {
            return 25;
        }

        public int GetMapTileData(int i_index)
        {
            return levelData[i_index];
        }

        public int ConvertToMapIdex(int i_Row, int i_Col, int i_TotalRow, int i_TotalCol)
        {
            return i_Row * i_TotalRow + i_Col;
        }

        public List<Vector2> GetWalkablePaths()
        {
            List<Vector2> walkablePositions = new List<Vector2>();
         
            for (int i = 0; i < GetMapTileWidth(); i++)
            {
                for (int j = 0; j < GetMapTileHeight(); j++)
                {
                    // if index is not a path (floor), store it in positions list
                    if (levelData[i * 25 + j] == (int) TileType.PATH)
                    {
                        walkablePositions.Add(new Vector2(j, i));
                    }
                }
            }   
            
            return walkablePositions;
        }

        public void InitializeMapData()
        {
            levelData = new int[25 * 25] 
            {
                01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,
                01,10,01,05,00,00,00,00,00,01,21,21,15,21,21,01,00,00,00,00,00,00,00,00,01,
                01,00,01,01,01,00,01,01,00,01,21,21,00,21,21,01,00,01,01,01,01,01,05,00,01,
                01,00,00,00,01,00,01,00,00,01,05,21,00,21,00,01,00,01,00,00,00,01,00,00,01,
                01,00,01,00,01,01,01,00,01,01,00,00,00,00,00,01,00,01,00,01,00,00,00,01,01,
                01,00,01,00,00,00,00,00,05,01,00,01,01,01,01,01,00,01,01,01,00,01,01,01,01,
                01,00,01,01,01,01,01,01,01,01,00,00,00,00,00,00,00,00,00,01,00,01,00,05,01,
                01,00,05,00,00,00,00,00,00,01,00,00,01,00,01,05,01,00,00,01,00,00,00,01,01,
                01,00,00,00,01,00,01,01,01,01,01,00,01,00,01,01,01,00,00,01,00,01,00,00,01,
                01,01,00,01,01,00,00,00,01,00,00,00,01,00,01,00,00,00,00,01,00,01,00,01,01,
                01,00,00,00,00,00,01,00,01,01,01,00,01,00,01,01,01,01,00,00,00,01,00,00,01,
                01,00,01,01,01,00,00,00,01,00,00,00,00,00,01,00,00,00,00,01,01,01,01,00,01,
                01,00,00,00,01,01,01,00,01,01,01,01,01,01,01,00,01,01,01,01,01,01,01,01,01,
                01,00,01,00,00,00,01,00,01,05,01,00,01,00,00,00,01,00,00,01,01,00,01,00,01,
                01,00,01,00,01,00,00,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,01,00,01,
                01,00,01,00,00,00,00,01,00,00,01,00,01,01,01,01,01,00,01,01,00,00,01,00,01,
                01,00,01,01,01,01,01,01,00,01,01,00,01,05,00,01,00,00,00,01,01,01,01,00,01,
                01,00,00,00,00,01,00,00,00,00,01,00,01,01,00,01,00,01,01,01,05,01,00,00,01,
                01,01,01,01,00,01,00,01,01,00,01,00,00,00,00,01,00,01,00,01,00,00,00,01,01,
                01,00,00,00,00,00,00,00,00,00,01,00,01,01,00,00,00,00,00,00,00,01,00,00,01,
                01,01,01,01,01,01,01,00,01,00,01,00,00,01,01,01,01,01,00,01,01,01,01,00,01,
                01,00,00,00,01,05,01,00,01,00,01,00,00,00,00,00,00,01,00,01,05,01,00,00,01,
                01,00,01,00,01,00,01,01,01,00,01,00,01,01,01,01,00,01,00,01,00,01,00,00,01,
                01,00,01,00,00,00,00,00,00,00,01,00,00,00,00,01,00,00,00,00,00,00,00,00,01,
                01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,
            };
        }
    }
}