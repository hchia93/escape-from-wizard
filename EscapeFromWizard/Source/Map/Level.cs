using System.Collections.Generic;
using Microsoft.Xna.Framework;

namespace EscapeFromWizard.Map
{
    public class Level
    {
        public int[] m_Data;
        public List<Vector2> m_WalkablePositions = new List<Vector2>();

        public int GetTotalTileWidth()
        {
            return 25;
        }

        public int GetTotalTileHeight()
        {
            return 25;
        }

        public int GetTileData(int index)
        {
            return m_Data[index];
        }

        public int ToTileIndex(int row, int column, int totalRow, int totalColumn)
        {
            return row * 25 + column;
        }

        public void Initialize()
        {
            m_Data = new int[25 * 25]
            {
                01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,
                01,10,01,05,00,00,00,00,00,01,21,21,15,21,21,01,00,00,00,00,00,00,00,00,01,
                01,00,01,01,01,00,01,01,00,01,21,21,00,21,21,01,00,01,01,01,01,01,05,00,01,
                01,00,00,00,01,00,01,00,00,01,05,21,00,21,00,01,00,01,00,00,00,01,00,00,01,
                01,00,01,00,01,01,01,00,01,01,00,00,00,00,00,01,00,01,00,01,00,00,00,01,01,
                01,00,01,00,00,00,00,00,05,01,00,01,01,01,01,01,00,01,01,01,00,01,01,01,01,
                01,00,01,01,01,01,01,01,01,01,00,00,00,00,00,00,00,00,00,01,00,01,00,05,01,
                01,00,05,00,00,00,00,00,00,01,00,00,01,00,01,05,01,00,00,01,00,00,00,01,01,
                01,00,00,00,01,00,01,01,01,01,01,00,01,00,01,01,01,00,00,01,00,01,00,00,01,
                01,01,00,01,01,00,00,00,01,00,00,00,01,00,01,00,00,00,00,01,00,01,00,01,01,
                01,00,00,00,00,00,01,00,01,01,01,00,01,00,01,01,01,01,00,00,00,01,00,00,01,
                01,00,01,01,01,00,00,00,01,00,00,00,00,00,01,00,00,00,00,01,01,01,01,00,01,
                01,00,00,00,01,01,01,00,01,01,01,01,01,01,01,00,01,01,01,01,01,01,01,01,01,
                01,00,01,00,00,00,01,00,01,05,01,00,01,00,00,00,01,00,00,01,01,00,01,00,01,
                01,00,01,00,01,00,00,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,01,00,01,
                01,00,01,00,00,00,00,01,00,00,01,00,01,01,01,01,01,00,01,01,00,00,01,00,01,
                01,00,01,01,01,01,01,01,00,01,01,00,01,05,00,01,00,00,00,01,01,01,01,00,01,
                01,00,00,00,00,01,00,00,00,00,01,00,01,01,00,01,00,01,01,01,05,01,00,00,01,
                01,01,01,01,00,01,00,01,01,00,01,00,00,00,00,01,00,01,00,01,00,00,00,01,01,
                01,00,00,00,00,00,00,00,00,00,01,00,01,01,00,00,00,00,00,00,00,01,00,00,01,
                01,01,01,01,01,01,01,00,01,00,01,00,00,01,01,01,01,01,00,01,01,01,01,00,01,
                01,00,00,00,01,05,01,00,01,00,01,00,00,00,00,00,00,01,00,01,05,01,00,00,01,
                01,00,01,00,01,00,01,01,01,00,01,00,01,01,01,01,00,01,00,01,00,01,00,00,01,
                01,00,01,00,00,00,00,00,00,00,01,00,00,00,00,01,00,00,00,00,00,00,00,00,01,
                01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,
            };
            GenerateWalkablePaths();
        }
        private void GenerateWalkablePaths()
        {
            for (int i = 0; i < GetTotalTileWidth(); i++)
            {
                for (int j = 0; j < GetTotalTileHeight(); j++)
                {
                    // if index is not a path (floor), store it in positions list
                    if (m_Data[i * 25 + j] == (int) TileType.PATH)
                    {
                        m_WalkablePositions.Add(new Vector2(j, i));
                    }
                }
            }
        }

    }
}