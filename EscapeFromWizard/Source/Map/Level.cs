using System.Collections.Generic;
using Microsoft.Xna.Framework;

namespace EscapeFromWizard.Map
{
    public class Level
    {
        public int[] m_Data;

        public int GetMapTileWidth()
        {
            return 25;
        }

        public int GetMapTileHeight()
        {
            return 25;
        }

        public int GetMapTileData(int index)
        {
            return m_Data[index];
        }

        public int ConvertToMapIdex(int row, int column, int totalRow, int totalColumn)
        {
            return row * 25 + column;
        }

        // Computationally expensive to regenerate all
        public List<Vector2> GetWalkablePaths()
        {
            List<Vector2> walkablePositions = new List<Vector2>();
         
            for (int i = 0; i < GetMapTileWidth(); i++)
            {
                for (int j = 0; j < GetMapTileHeight(); j++)
                {
                    // if index is not a path (floor), store it in positions list
                    if (m_Data[i * 25 + j] == (int) TileType.PATH)
                    {
                        walkablePositions.Add(new Vector2(j, i));
                    }
                }
            }   
            
            return walkablePositions;
        }

        public void Initialize()
        {
            m_Data = new int[25 * 25] 
            {
                01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,
                01,10,01,05,00,00,00,00,00,01,21,21,15,21,21,01,00,00,00,00,00,00,00,00,01,
                01,00,01,01,01,00,01,01,00,01,21,21,00,21,21,01,00,01,01,01,01,01,05,00,01,
                01,00,00,00,01,00,01,00,00,01,05,21,00,21,00,01,00,01,00,00,00,01,00,00,01,
                01,00,01,00,01,01,01,00,01,01,00,00,00,00,00,01,00,01,00,01,00,00,00,01,01,
                01,00,01,00,00,00,00,00,05,01,00,01,01,01,01,01,00,01,01,01,00,01,01,01,01,
                01,00,01,01,01,01,01,01,01,01,00,00,00,00,00,00,00,00,00,01,00,01,00,05,01,
                01,00,05,00,00,00,00,00,00,01,00,00,01,00,01,05,01,00,00,01,00,00,00,01,01,
                01,00,00,00,01,00,01,01,01,01,01,00,01,00,01,01,01,00,00,01,00,01,00,00,01,
                01,01,00,01,01,00,00,00,01,00,00,00,01,00,01,00,00,00,00,01,00,01,00,01,01,
                01,00,00,00,00,00,01,00,01,01,01,00,01,00,01,01,01,01,00,00,00,01,00,00,01,
                01,00,01,01,01,00,00,00,01,00,00,00,00,00,01,00,00,00,00,01,01,01,01,00,01,
                01,00,00,00,01,01,01,00,01,01,01,01,01,01,01,00,01,01,01,01,01,01,01,01,01,
                01,00,01,00,00,00,01,00,01,05,01,00,01,00,00,00,01,00,00,01,01,00,01,00,01,
                01,00,01,00,01,00,00,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,01,00,01,
                01,00,01,00,00,00,00,01,00,00,01,00,01,01,01,01,01,00,01,01,00,00,01,00,01,
                01,00,01,01,01,01,01,01,00,01,01,00,01,05,00,01,00,00,00,01,01,01,01,00,01,
                01,00,00,00,00,01,00,00,00,00,01,00,01,01,00,01,00,01,01,01,05,01,00,00,01,
                01,01,01,01,00,01,00,01,01,00,01,00,00,00,00,01,00,01,00,01,00,00,00,01,01,
                01,00,00,00,00,00,00,00,00,00,01,00,01,01,00,00,00,00,00,00,00,01,00,00,01,
                01,01,01,01,01,01,01,00,01,00,01,00,00,01,01,01,01,01,00,01,01,01,01,00,01,
                01,00,00,00,01,05,01,00,01,00,01,00,00,00,00,00,00,01,00,01,05,01,00,00,01,
                01,00,01,00,01,00,01,01,01,00,01,00,01,01,01,01,00,01,00,01,00,01,00,00,01,
                01,00,01,00,00,00,00,00,00,00,01,00,00,00,00,01,00,00,00,00,00,00,00,00,01,
                01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,
            };
        }
    }
}